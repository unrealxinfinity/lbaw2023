openapi: 3.0.0
info:
  version: '1.0'
  title: 'LBAW MineMax Web API'
  description: 'Web Resources Specification (A7) for MineMax'

servers:
  - url: http://lbaw.fe.up.pt
    description: Production server

externalDocs:
  description: Find more info here.
  url: https://git.fe.up.pt/lbaw/lbaw2324/lbaw2314

tags:
  - name: 'M01: Authentication, Individual Profile and User Management'
  - name: 'M02: Worlds'
  - name: 'M03: Projects'
  - name: 'M04: Tasks'
  - name: 'M05: Administration and Static Pages'
  - name: 'M06: Search'

paths:
  /login:
    post:
      operationId: R101
      summary: 'R101: Login Action'
      description: 'Handles the login form submission information. Access: VIS'
      tags:
        - 'M01: Authentication, Individual Profile and User Management'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '302':
          description: 'Redirect after handling login.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful login. Redirect to the home page.'
                  value: '/'
                302Failure:
                  description: 'Failed login. Stay inside the login form.'
                  value: '/login'

    get:
      operationId: R102
      summary: 'R102: User login form'
      description: 'Shows the login form. Access: Everyone'
      tags:
        - 'M01: Authentication, Individual Profile and User Management'
      responses:
        '200':
          description: 'Authentication Form'
          content:
            text/html:
              schema:
                type: string
                format: html

  /logout:
    post:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'Logout the current authenticated user. Access: MBR, ADM, BLK'
      tags:
        - 'M01: Authentication, Individual Profile and User Management'
      responses:
        '302':
          description: 'Redirect after handling logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful logout. Redirect to the home page.'
                  value: '/home'

  /register:
    get:
      operationId: R104
      summary: 'R104: Get Register Form'
      description: 'Shows the registration form for everyone. Access: Everyone'
      tags:
        - 'M01: Authentication, Individual Profile and User Management'
      responses:
        '200':
          description: 'Registration Form'
          content:
            text/html:
              schema:
                type: string

    post:
      operationId: R105
      summary: 'R105: Register Action'
      description: 'Sign-up the current user as a member. Access: VIS,ADM,BLK'
      tags:
        - 'M01: Authentication, Individual Profile and User Management'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                login:
                  type: boolean
                member:
                  type: boolean
                name:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '302':
          description: 'Redirect after signing-up'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful sign-up. Redirect to main page.'
                  value: '/home'
                302Failure:
                  description: 'Failed. Redirect to sign-up form.'
                  value: '/sign-up'
  /members/{username}:
    get:
      operationId: R106
      summary: 'R106: Get User Profile'
      description: 'Shows the profile of the user with the given id. Access: MBR,BLK'
      tags:
        - 'M01: Authentication, Individual Profile and User Management'
      parameters:
        - name: username
          in: path
          description: 'Username'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'User profile page'
          content:
            text/html:
              schema:
                type: string
                format: html
        '404':
          description: 'User not found'
          content:
            text/html:
              schema:
                type: string
                format: html

  /api/members/{id}:
    put:
      operationId: R107
      summary: 'R107: Update Member Profile'
      description: 'Updates a member''s profile information. Access: MBR,ADM'
      tags:
        - 'M01: Authentication, Individual Profile and User Management'
      parameters:
        - name: id
          in: path
          description: 'User ID'
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                username:
                  type: string
                password:
                  type: string
                birthday:
                  type: string
                name:
                  type: string
                description:
                  type: string
                email:
                  type: string
                  format: email
              required:
                - old_password
                - username
                - birthday
                - name
                - description
                - email
      responses:
        '302':
          description: 'Redirect after editing profile.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Profile edited successfully.'
                  value: '/members/{username}'
                302Failure:
                  description: 'Old password does not match records.'
                  value: '/members/{username}'

  /members/{id}:
    delete:
      operationId: R109
      summary: 'R109: Delete Member Profile'
      description: 'Delete a member profile. Access: MBR, ADM'
      tags:
        - 'M01: Authentication, Individual Profile and User Management'
      parameters:
        - name: id
          in: path
          required: true
          description: 'User ID'
          schema:
            type: integer
            minimum: 1
      responses:
        '302':
          description: 'Redirect after deletion attempt.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Profile deleted successfully.'
                  value: '/'
        '403':
          description: 'Action not authorized.'
          content:
            text/html:
              schema:
                type: string
                format: html

  /myworlds:
    get:
      operationId: R201
      summary: 'R201: List Member Worlds'
      description: 'List current member''s worlds. Access: MBR'
      tags:
        - 'M02: Worlds'
      responses:
        '200':
          description: 'Page with member''s worlds.'
          content:
            text/html:
              schema:
                type: string
                format: html
        '403':
          description: 'Action not authorized.'
          content:
            text/html:
              schema:
                type: string
                format: html

  /worlds/{id}:
    get:
      operationId: R202
      summary: 'R202: View World'
      description: 'View a world. Access: MBR, ADM'
      tags:
        - 'M02: Worlds'
      parameters:
        - name: id
          in: path
          description: 'World ID'
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: 'World page'
          content:
            text/html:
              schema:
                type: string
                format: html
        '404':
          description: 'Page not found'
          content:
            text/html:
              schema:
                type: string
                format: html
  /worlds:
    post:
      operationId: R203
      summary: 'R203: Create a world. Access: MBR'
      tags:
        - 'M02: Worlds'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                picture:
                  type: string
              required:
                - name
                - description
      responses:
        '302':
          description: 'Redirect after world creation'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'World created'
                  value: '/worlds/{id}'
                302Failure:
                  description: 'World creation failed. Back to user''s worlds'
                  value: '/myworlds'

  /api/worlds/{id}/{username}:
    post:
      operationId: R204
      summary: 'R204: Add member to world. Access: WOWN, WADM'
      tags:
        - 'M02: Worlds'
      parameters:
        - name: id
          in: path
          description: 'World ID'
          schema:
            type: integer
            minimum: 1
          required: true
        - name: username
          in: path
          description: 'Username of member to be added'
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                type:
                  type: boolean
              required:
                - type
      responses:
        '200':
          description: 'Data of added member'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    minimum: 1
                  username:
                    type: string
                  email:
                    type: string
                    format: email
                  is_admin:
                    type: boolean
                  description:
                    type: string
  /worlds/{id}/comment:
    post:
      operationId: R205
      summary: 'R205: Post a comment on a world. Access: WMBR'
      description: 'Post a comment on a world. Access: WMBR'
      tags:
        - 'M02: Worlds'
      parameters:
        - name: id
          in: path
          description: 'World ID'
          schema:
            type: integer
            minimum: 1
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
                member_id:
                  type: integer
                  minimum: 1
              required:
                - text
                - member_id
      responses:
        '302':
          description: 'Redirect after comment creation.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Comment posted.'
                  value: 'worlds/{id}#comments'
                302Failure:
                  description: 'Error in comment creation.'
                  value: 'worlds/{id}#comments'

  /projects/{id}:
    get:
      operationId: R301
      summary: 'R301: View a project. Access: WMBR, ADM'
      description: 'View a project. Access: WMBR, ADM'
      tags:
        - 'M03: Projects'
      parameters:
        - name: id
          in: path
          description: 'Project ID'
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '200':
          description: 'Project page'
          content:
            text/html:
              schema:
                type: string
                format: html
        '404':
          description: 'Page not found'
          content:
            text/html:
              schema:
                type: string
                format: html

    delete:
      operationId: R302
      summary: 'R302: Delete a project. Access: WOWN, WADM, PLDR'
      description: 'Delete a project. Access: WOWN, WADM, PLDR'
      tags:
        - 'M03: Projects'
      parameters:
        - name: id
          in: path
          description: 'Project ID'
          schema:
            type: integer
            minimum: 1
          required: true
      responses:
        '302':
          description: 'Redirect after project deletion.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Project deleted'
                  value: '/worlds/{world_id}'
                302Failure:
                  description: 'Error in project deletion'
                  value: '/projects/{id}'
        '403':
          description: 'Action not authorized'
          content:
            text/html:
              schema:
                type: string
                format: html

  /projects:
    post:
      operationId: R303
      summary: 'R303: Create a project. Access: WADM'
      description: 'Create a project. Access: WADM'
      tags:
        - 'M03: Projects'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                world_id:
                  type: integer
                  minimum: 1
                picture:
                  type: string
              required:
                - name
                - description
                - world_id
      responses:
        '302':
          description: 'Redirect after project creation.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Project created'
                  value: '/projects/{id}'
                302Failure:
                  description: 'Failure in project creation. Back to form'
                  value: '/worlds/{id}/create-project'
        '403':
          description: 'Action not authorized'
          content:
            text/html:
              schema:
                type: string
                format: html

  /api/projects/{id}/{username}:
    post:
      operationId: R304
      summary: 'R304: Add member to project. Access: WOWN, WADM, PLDR'
      description: 'Add member to project. Access: WOWN, WADM, PLDR'
      tags:
        - 'M03: Projects'
      parameters:
        - name: id
          in: path
          description: 'Project ID'
          schema:
            type: integer
            minimum: 1
          required: true
        - name: username
          in: path
          description: 'Username of member to be added'
          schema:
            type: string
            enum: ['Member', 'Project Leader']
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                type:
                  type: boolean
              required:
                - type
      responses:
        '200':
          description: 'Data of added member'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  id:
                    type: integer
                    minimum: 1
                  username:
                    type: string
                  email:
                    type: string
                  description:
                    type: string
  /tasks/{id}:
    get:
      operationId: R401
      summary: 'R401: View Tasks'
      description: 'View a task page. Access: PLDR, ASS'
      tags:
        - 'M04: Tasks'
      parameters:
        - name: id
          in: path
          description: 'Task ID'
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Task page'
          content:
            text/html:
              schema:
                type: string
                format: html
        '403':
          description: 'Action not authorized'
          content:
            text/html:
              schema:
                type: string
                format: html
        '404':
          description: 'Page not found'
          content:
            text/html:
              schema:
                type: string
                format: html

    post:
      operationId: R402
      summary: 'R402: Edit Task'
      description: 'Edit a task. Access: PLDR'
      tags:
        - 'M04: Tasks'
      parameters:
        - name: id
          in: path
          description: 'Task ID'
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: ['BackLog', 'Upcoming', 'In Progress', 'Finalizing', 'Done']
                due_at:
                  type: string
                effort:
                  type: integer
                priority:
                  type: string
      responses:
        '302':
          description: 'Redirect after task creation'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Task edited'
                  value: '/tasks/{id}'
                302Failure:
                  description: 'Failure in task editing'
                  value: '/tasks/{id}'
        '403':
          description: 'Action not authorized'
          content:
            text/html:
              schema:
                type: string
                format: html

  /tasks/create:
    post:
      operationId: R403
      summary: 'R403 Create Task'
      description: 'Task creation. Access: PLDR, WOWN, WADM'
      tags:
        - 'M04: Tasks'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: ['BackLog', 'Upcoming', 'In Progress', 'Finalizing', 'Done']
                due_at:
                  type: string
                effort:
                  type: integer
                priority:
                  type: string
                project_id:
                  type: integer
                  minimum: 1
      responses:
        '302':
          description: 'Redirect after task creation'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Task created'
                  value: '/tasks/{id}'
                302Failure:
                  description: 'Error in task creation'
                  value: '/projects/{project-id}'
        '403':
          description: 'Action not authorized'
          content:
            text/html:
              schema:
                type: string
                format: html
  /myprojects:
    get:
      operationId: R305
      summary: 'R305: List Projects'
      description: 'List all projects of a member. Access: VIS,MBR,ADM'
      tags:
        - 'M03: Projects'
      responses:
        '200':
          description: 'Page with member projects'
          content:
            text/html:
              schema:
                type: string
                format: html
        '404':
          description: 'Projects not found'
          content:
            text/html:
              schema:
                type: string
                format: html

  /api/tasks/{id}/{username}:
    post:
      operationId: R404
      summary: 'R404: Assign Task'
      description: 'Assigns a task. Access: PLDR,ASS,ADM'
      tags:
        - 'M04: Tasks'
      parameters:
        - name: id
          in: path
          description: 'Task id'
          required: true
          schema:
            type: integer
            minimum: 1
        - name: username
          in: path
          description: 'Username'
          required: true
          schema: 
            type: string
      responses:
        '200':
          description: 'Task page'
          content:
            text/html:
              schema:
                type: string
                format: html
        '404':
          description: 'Task not found'
          content:
            text/html:
              schema:
                type: string
                format: html
  /api/project/{id}/tasks:
    get:
      operationId: R306
      summary: 'R306: Search project tasks'
      description: 'Search tasks related to a project. Access: MBR,PMBR,PLDR,VIS'
      tags:
        - 'M03: Projects'
      parameters:
        - in: query
          name: search
          description: Text to search the tasks by fts
          schema:
            type: string
          required: false
        - in: path
          name: id
          description: Task ID
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: 'List of Tasks'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    due_at:
                      type: string
                    status:
                      type: string
                    effort:
                      type: integer
                    priority:
                      type: string
                  example:
                    - id: 1
                      title: Feed pigs
                      description: Dar comida aos porcos
                      due_at: 15/12/2019
                      status: Done
                      effort: 2
                      priority: minimal
                    - id: 2
                      title: Xmas tree
                      description: Construir uma árvore de natal
                      due_at: 22/12/2019
                      status: Done
                      effort: 5
                      priority: maximal
        '204':
          description: 'No content'
          content:
            text/html:
              schema:
                type: string
                format: html

  /api/worlds/{id}/projects:
    get:
      operationId: R206
      summary: 'R206: Search World Projects'
      description: 'Search projects related to a world. Access: MBR,WOWN,WADM,WMBR,VIS'
      tags:
        - 'M02: Worlds'
      parameters:
        - in: query
          name: search
          description: Text to search the projects by fts
          schema:
            type: string
          required: false
        - in: path
          name: id
          description: World ID
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: 'List of Projects'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    due_at:
                      type: string
                    status:
                      type: string
                    effort:
                      type: integer
                    priority:
                      type: string
                  example:
                    - id: 1
                      title: Feed pigs
                      description: Dar comida aos porcos
                      due_at: 15/12/2019
                      status: Done
                      effort: 2
                      priority: minimal
                    - id: 2
                      title: Xmas tree
                      description: Construir uma árvore de natal
                      due_at: 22/12/2019
                      status: Done
                      effort: 5
                      priority: maximal
        '204':
          description: 'No content'
          content:
            text/html:
              schema:
                type: string
                format: html              
  /mytasks:
    get:
      operationId: R405
      summary: 'R405: Shows tasks'
      description: 'Show tasks of a user. Access: MBR,WOWN,WADM,WMBR,VIS'
      tags:
        - 'M04: Tasks'
      responses:
        '200':
          description: 'List of Tasks'
          content:
            text/html:
              schema:
                type: string
                format: html
        '204':
          description: 'No content'
          content:
            text/html:
              schema:
                type: string
                format: html

  /search:
    get:
      operationId: R601
      summary: 'R601: Search Engine'
      description: 'Search feature for the main page. Access: VIS,MBR'
      tags:
        - 'M09: Search'
      parameters:
        - in: query
          name: anything
          description: Text to search anything by fts
          schema:
            type: string
          required: false
      responses:
        '200':
          description: 'Page with search results'
          content:
            text/html:
              schema:
                type: string
                format: html
        '204':
          description: 'No content'
          content:
            text/html:
              schema:
                type: string
                format: html

  /create-world:
    get:
      operationId: R209
      summary: 'R209: World Creation Form'
      description: 'Get the forms for the creation of a new world. Access: MBR'
      tags:
        - 'M02: Worlds'
      parameters:
        - in: query
          name: name
          description: Name to give to the world
          schema:
            type: string
          required: true
        - in: query
          name: description
          description: Description of a world
          schema:
            type: string
          required: false
      responses:
        '302':
          description: 'Redirect after world creation.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'World created'
                  value: '/worlds/{world_id}'
                302Failure:
                  description: 'Error in world creation'
                  value: '/create-world'
  /worlds/{id}/create-project:
    get:
      operationId: R210
      summary: 'R210: Create Project Forms'
      description: 'Get the forms to create a new project inside a world. Access: WOWN,WADM'
      tags:
        - 'M02: Worlds'
      parameters:
        - in: path
          name: id
          description: World ID
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'Page with project creation form'
          content:
            text/html:
              schema:
                type: string
                format: html

  /admin:
    get:
      operationId: R501
      summary: 'R501: List members'
      description: 'Lists the members in a page for admin operations. Access: ADM'
      tags:
        - 'M05: Administration and Static Pages'
      parameters:
        - in: query
          name: search
          description: name or email of the member admin wants to edit
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Page with the search results'
          content:
            text/html:
              schema:
                type: string
                format: html

  /members/{username}/edit:
    get:
      operationId: R108
      summary: 'R108: Profile Edit Page Form'
      description: 'Shows the edit profile page of a member. Access: MBR'
      tags:
        - 'M01: Authentication, Individual Profile and user management'
      parameters:
        - in: path
          name: username
          description: username of the authenticated user
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Page with the Edit profile form'
          content:
            text/html:
              schema:
                type: string
                format: html
        '404':
          description: 'Abort case admin'
  /api/projects/{id}/tags/create:
    post:
      operationId: R307
      summary: 'R307: Creates a tag for the project'
      description: 'Tag creation. Access: PLDR, PMBR'
      tags:
        - 'M03: Projects'
      parameters:
        - in: path
          name: id
          description: Project ID
          schema:
            type: string
          required: true
        - in: query
          name: tagName
          description: tagName given
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                tagName:
                  type: string
              required:
                - tagName
      responses:
        '200':
          description: 'Created Tag Name'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  tagName:
                    type: string
                required:
                  - error
                  - tagName
              example:
                error: false
                tagName: gold

  /tasks/{id}/comment:
    post:
      operationId: R406
      summary: 'R406: Creates comment for the user'
      description: 'Comment creation on task. Access: PLDR, ASS, ADMIN'
      tags:
        - 'M04: Tasks'
      parameters:
        - in: path
          name: id
          description: Task ID
          schema:
            type: string
          required: true
        - in: query
          name: text
          description: Comment text
          schema:
            type: string
          required: true
        - in: query
          name: member
          description: memberID
          schema:
            type: string
          required: true
      responses:
        '302':
          description: 'Redirect to task page after posting comment.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Comment added'
                  value: '/tasks/{id}'
                302Failure:
                  description: 'Error in posting comment'
                  value: '/task/{id}'
                